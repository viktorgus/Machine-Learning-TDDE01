View(theta1)
theta1 = optimize(loglike,c(0,100),vector=data$Length,maximum="true")[0]
View(theta1)
theta1 = optimize(loglike,c(0,100),vector=data$Length,maximum="true")[1]
View(theta1)
theta1 = optimize(loglike,c(0,100),vector=data$Length,maximum="true")$maximum
theta2 = optimize(bayesian,c(0,100),const=10,vector=data$Length,maximum="true")$maximum
theta = optimize(bayesian,c(0,100),const=10,vector=data$Length,maximum="true")$maximum
theta2 = optimize(bayesian,c(0,100),const=10,vector=data$Length,maximum="true")$maximum
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
h1 <- qplot(data$Length)
h1
id
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment1.R')
id
n
getLength(runif(50, 0, 1),theta1)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
getLength(runif(50, 0, 1),theta1)
h2 <- qplot(newVals)
h1 <- qplot(data$Length)
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- qplot(newVals)
h2
h1 <- qplot(data$Length)
h2 <- geom_point(newVals)
h2
h1+h2
h1
h2
newVals = getLength(runif(50, 0, 1),theta2)
h2 <- geom_point(aes(newVals))
h2
h2
h2 <- qplot(newVals)
h2
h1 <- qplot(data$Length)
h1
h2
h1
newVals = getLength(runif(50, 0, 1),theta1)
newVals = getLength(runif(50, 0, 1),theta1)
h1 <- qplot(data$Length)
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- qplot(newVals)
h2
h2 <- qplot(newVals,xlab="Length",ylab="Ammount")
h2
h1 <- qplot(data$Length)
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- geom_histogram(newVals,xlab="Length",ylab="Ammount")
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount")
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- geom_histogram(aes(newVals))
h1+h2
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", color="observed Vals")
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- geom_histogram(aes(newVals),color="Generated Vals")
h1+h2
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals")
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- geom_histogram(aes(newVals),col="Generated Vals")
h1+h2
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals")
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- geom_histogram(aes(newVals,color="Generated Vals"))
h1+h2
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals")
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- geom_histogram(aes(newVals,color="Generated Vals",alpha=0.2))
h1+h2
h2 <- geom_histogram(aes(newVals,color="Generated Vals",alpha=0.1))
h1+h2
h2
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals",alpha=0.5)
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- geom_histogram(aes(newVals,color="Generated Vals",alpha=0.5))
h1+h2
h1
h1+h2
h2 <- gplot(newVals,color="Generated Vals",alpha=0.5)
h1+h2
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals",alpha=0.5)
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- gplot(newVals,color="Generated Vals",alpha=0.5)
h1+h2
h1
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals")
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- gplot(newVals,color="Generated Vals")
h1
h1+h2
h1
h2
h2
h2 <- gplot(newVals,color="Generated Vals")
h2
h2 <- gplot(newVals,color="Generated Vals")
h2 <- gplot(newVals,col="Generated Vals")
h2
h2 <- gplot(newVals,xlab="Length",ylab="Ammount",col="Generated Vals")
h2 <- qplot(newVals,xlab="Length",ylab="Ammount",col="Generated Vals")
h2
h2 <- qplot(newVals,xlab="Length",ylab="Ammount",col="Generated Vals",color="blue")
h2
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals")
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- qplot(newVals,xlab="Length",ylab="Ammount",col="Generated Vals")
h2
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals")
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- qplot(newVals,xlab="Length",ylab="Ammount",col="Generated Vals")
h2
set.seed(12345)
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals")
newVals = getLength(runif(50, 0, 1),theta1)
h2 <- qplot(newVals,xlab="Length",ylab="Ammount",col="Generated Vals")
h2
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment3_help.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
View(data)
View(data)
View(data)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
p1
p1
p1 <- qplot(data=data,x=data$Moisture,y=data$Protein,geom="point")
p1
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(train,test)
train$Moisture
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
testData
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(train,test)
makePolynomialModels(train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R', echo=TRUE)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(20,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(50,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
makePolynomialModels(6,train,test)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
help("stepAIC")
??stepAIC
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model = stepAIC(model,trace=0)
View(model)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
summary(model)
summary(model)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
summary(model)
summary(modelAIC)
summary(model)
summary(modelAIC)
View(modelAIC)
View(model)
View(modelAIC)
modelAIC$anova
install(glmnet)
install.packages(glmnet)
install.packages("glmnet")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
View(data)
View(data)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
X = train[sprintf("Channel%d",seq(1,100,1))]
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
typeof(Y)
Y = train[,Fat]
Y = train[,"Fat"]
typeof(Y)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
View(X)
typeof(Y)
View(data)
View(data)
View(data)
Y =train[,103]
Y
typeof(Y)
Y = as.vector(train[,103])
typeof(Y)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
typeof(Y)
View(data)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
X = train[,1:100]
typeof(X)
Y = train$Fat
typeof(Y)
View(data)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
Y
View(train)
X = train[,1:100]
Y = train[,102]
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
X <- model.matrix(. -Fat -Protein - Moisture, data=train)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
X = as.matrix(train[,1:100])
typeof(X)
#ridge regression
model = glmnet(Fat~ . -Protein - Moisture,data=train,family="gaussian")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
#ridge regression
model = glmnet(Fat~ . -Protein - Moisture,data=train,family="gaussian")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
#ridge regression
model = cv.glmnet(Fat~ . -Protein - Moisture,data=train,family="gaussian")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
#ridge regression
model = glmnet(Fat~ . -Protein - Moisture,data=train,family="gaussian")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
View(X)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
X = as.matrix(Fat~ . -Protein - Moisture,data=train)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model,xvar="lambda")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
#ridge regression
model = glmnet(x=X,y=Y,alpha=1,family="gaussian")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R', echo=TRUE)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R', echo=TRUE)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model,xvar="lambda")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R', echo=TRUE)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model,xvar="lambda")
plot(model,xvar="lambda")
set.seed(12345)
h1 <- qplot(data$Length,xlab="Length",ylab="Ammount", col="observed Vals")
newVals = getLength(runif(50, 0, 1),theta1)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
h1
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
h2
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
h1
h1
help("hist")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment2.R')
h1
h1
h1
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
modelAIC$anova
modelAIC$anova
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
View(data)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R', echo=TRUE)
View(data)
View(data)
View(data)
View(data)
View(data)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment1.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model$lambda.min
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model,xvar="lambda")
model$lambda.min
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model,xvar="lambda")
model$lambda.min
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model$lambda.min
model$lambda.min
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model,xvar="lambda")
model$lambda.min
model$lambda.min
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model$lambda.min
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
View(data)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model$lambda.min
plot(model,xvar="lambda")
model$lambda.min
model = cv.glmnet(x=X,y=Y,alpha=1,family="gaussian",lambda= seq(0,1,0.001))
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model$lambda.min
plot(model,xvar="lambda")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model,xvar="lambda")
model$lambda.min
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
coef(model,s="lambda.min")
model$lambda.min
threshold=0.5
#Train linear regression model on train-data
logistic <- glm(Spam ~ . ,data=train,family="binomial")
data <- read_excel("spambase.xlsx")
#Get stats for traindata
pred_train <- predict(logistic,train,type="response")
confussion(pred_train, train$Spam, "train")
pred_train <- predict(logistic,train,type="response")
confussion(pred_train, train$Spam, "train")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment1.R')
#Get stats for traindata
pred_train <- predict(logistic,train,type="response")
confussion(pred_train, train$Spam, "train")
confussion = function(pred,real,name){
pred <- as.numeric(pred>threshold)
conf = table(pred,real)
mcr = 1-sum(diag(conf))/sum(conf)
}
pred <- as.numeric(pred>threshold)
conf = table(pred,real)
mcr = 1-sum(diag(conf))/sum(conf)
pred <- as.numeric(pred>threshold)
conf = table(pred,real)
mcr = 1-sum(diag(conf))/sum(conf)
n=dim(data)[1]
set.seed(12345)
id=sample(1:n, floor(n*0.5))
train=data[id,]
test=data[-id,]
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
view(model)
View(model)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
View(model)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R', echo=TRUE)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model$lambda.min
coef(model,s="lambda.min")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model$lambda.min
plot(model,xvar="lambda")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model,xvar="lambda")
model$lambda.min
plot(model,xvar="lambda")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model)
coef(model,s="lambda.min")
model$lambda.min
plot(model)
plot(model)
model$lambda.min
source('~/.active-rstudio-document')
View(data)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
View(data)
data[,2]
data[,1]
data[,101]
data[,102]
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model$lambda.min
where(model$glmnet.fit)
model$glmnet.fit
View(model)
View(model)
coef(model,s="lambda.min")
where(coef(model,s="lambda.min")==0)
coef(model,s="lambda.min")==0
model = cv.glmnet(x=X,y=Y,alpha=1,family="gaussian",lambda= seq(0,1,0.001),nfolds=30)
plot(model)
model$lambda.min
model = cv.glmnet(x=X,y=Y,alpha=1,family="gaussian",lambda= seq(0,1,0.001),nfolds=30)
model = cv.glmnet(x=X,y=Y,alpha=1,family="gaussian",lambda= seq(0,1,0.001),nfolds=50)
plot(model)
model$lambda.min
model = cv.glmnet(x=X,y=Y,alpha=1,family="gaussian",lambda= seq(0,1,0.001),nfolds=80)
plot(model)
model$lambda.min
log(0.123)
knnModel = kknn(Spam~.,train,test, k = 30)
knnpred_test = fitted(knnModel)
confussion(knnpred_test,test$Spam, "### knnTest ###")
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
plot(model)
#makePolynomialModels(6,train,test)
model <- glm(Fat~ . -Protein - Moisture,data=train,family="gaussian")
modelAIC = stepAIC(model,trace=FALSE,direction="backward")
modelAIC$coefficients
length(modelAIC$coefficients)
modelAIC = stepAIC(model,trace=FALSE,direction="both")
length(modelAIC$coefficients)
model <- glm(Fat~ . ,data=train,family="gaussian")
modelAIC = stepAIC(model,trace=FALSE,direction="backward")
length(modelAIC$coefficients)
model <- glm(Fat~ . -Protein - Moisture,data=data,family="gaussian")
modelAIC = stepAIC(model,trace=FALSE,direction="backward")
length(modelAIC$coefficients)
X = as.matrix(scale(data[,2:101]))
Y = scale(data$Fat)
model <- glm(Y ~ X,data=data,family="gaussian")
modelAIC = stepAIC(model,trace=FALSE,direction="backward")
length(modelAIC$coefficients)
model <- glm(Fat~ . -Sample -Protein - Moisture,data=data,family="gaussian")
modelAIC = stepAIC(model,trace=FALSE,direction="backward")
length(modelAIC$coefficients)
source('C:/Users/vicke/OneDrive/Dokument/TDDE01 Labb/TDDE01 labb/assignment4.R')
model$lambda.min
plot(model)
